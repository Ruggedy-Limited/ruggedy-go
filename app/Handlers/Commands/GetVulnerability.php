<?php

namespace App\Handlers\Commands;

use App\Commands\GetVulnerability as GetVulnerabilityCommand;
use App\Exceptions\InvalidInputException;
use App\Exceptions\VulnerabilityNotFoundException;
use App\Repositories\VulnerabilityRepository;

class GetVulnerability extends CommandHandler
{
    /** @var VulnerabilityRepository */
    protected $repository;

    /**
     * GetVulnerability constructor.
     *
     * @param VulnerabilityRepository $vulnerabilityRepository
     */
    public function __construct(VulnerabilityRepository $vulnerabilityRepository)
    {
        $this->repository = $vulnerabilityRepository;
    }

    /**
     * Process the GetVulnerability command.
     *
     * @param GetVulnerabilityCommand $command
     * @return null|object
     * @throws InvalidInputException
     * @throws VulnerabilityNotFoundException
     */
    public function handle(GetVulnerabilityCommand $command)
    {
        $id             = $command->getId();
        $workspaceAppId = $command->getWorkspaceAppId();
        if (!isset($id, $workspaceAppId)) {
            throw new InvalidInputException("One or more required members are not set on the command");
        }

        $vulnerability = $this->repository->find($id, $workspaceAppId);
        if (empty($vulnerability)) {
            throw new VulnerabilityNotFoundException("There is no existing Vulnerability with the given ID");
        }

        return $vulnerability;
    }
}