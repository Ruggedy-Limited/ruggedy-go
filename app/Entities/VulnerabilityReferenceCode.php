<?php

namespace App\Entities;

use App\Contracts\HasIdColumn;
use App\Contracts\RelatesToFiles;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;

/**
 * App\Entities\VulnerabilityReferenceCode
 *
 * @ORM\Entity(repositoryClass="App\Repositories\VulnerabilityReferenceCodeRepository")
 * @ORM\HasLifecycleCallbacks
 */
class VulnerabilityReferenceCode extends Base\VulnerabilityReferenceCode implements HasIdColumn, RelatesToFiles
{
    const REF_TYPE_CVE          = 'cve';
    const REF_TYPE_BID          = 'bid';
    const REF_TYPE_CERT         = 'cert';
    const REF_TYPE_PCI_3_1      = 'pci3.1';
    const REF_TYPE_PCI_3_2      = 'pci3.2';
    const REF_TYPE_OWASP        = 'owasp';
    const REF_TYPE_CAPEC        = 'capec';
    const REF_TYPE_WASC         = 'wasc';
    const REF_TYPE_OSVDBID      = 'osvdbid';
    const REF_TYPE_HIPAA        = 'hipaa';
    const REF_TYPE_ONLINE_OTHER = 'online_other';

    /**
     * @ORM\ManyToOne(targetEntity="Vulnerability", inversedBy="vulnerabilityReferenceCodes", cascade={"persist"}, fetch="EAGER")
     * @ORM\JoinColumn(name="`vulnerability_id`", referencedColumnName="`id`", nullable=false)
     */
    protected $vulnerability;

    /**
     * @ORM\ManyToMany(targetEntity="File", mappedBy="vulnerability_reference_codes")
     */
    protected $files;

    /**
     * Vulnerability constructor.
     */
    public function __construct()
    {
        parent::__construct();
        $this->files = new ArrayCollection();
    }

    /**
     * @param File $file
     * @return $this
     */
    public function addFile(File $file)
    {
        $this->files[] = $file;

        return $this;
    }

    /**
     * @param File $file
     * @return $this
     */
    public function removeFile(File $file)
    {
        $this->files->removeElement($file);

        return $this;
    }
}