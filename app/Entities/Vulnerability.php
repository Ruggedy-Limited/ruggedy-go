<?php

namespace App\Entities;

use App\Contracts\HasIdColumn;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;
use Illuminate\Support\Collection;

/**
 * App\Entities\Vulnerability
 *
 * @ORM\Entity(repositoryClass="App\Repositories\VulnerabilityRepository")
 * @ORM\HasLifecycleCallbacks
 */
class Vulnerability extends Base\Vulnerability implements HasIdColumn
{
    /**
     * @ORM\ManyToMany(targetEntity="File", mappedBy="vulnerabilities")
     */
    protected $files;

    /**
     * Vulnerability constructor.
     */
    public function __construct()
    {
        parent::__construct();
        $this->files = new ArrayCollection();
    }

    /**
     * Get a hash value of all the property values for all the properties that are set
     *
     * @return string
     */
    public function getHash(): string
    {
        $properties = new Collection($this->toArray());

        return sha1($properties->reduce(function ($carry, $current)
        {
            return "$carry:$current";
        }));
    }

    /**
     * @param File $file
     * @return $this
     */
    public function addFile(File $file)
    {
        $this->files[] = $file;

        return $this;
    }

    /**
     * @param File $file
     * @return $this
     */
    public function removeFile(File $file)
    {
        $this->files->removeElement($file);

        return $this;
    }
}