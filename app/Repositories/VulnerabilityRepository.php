<?php

namespace App\Repositories;

use App\Contracts\Searchable;
use App\Entities\Base\AbstractEntity;
use App\Entities\Comment;
use App\Entities\Vulnerability;
use Doctrine\Common\Collections\Criteria;
use Illuminate\Support\Collection;
use LaravelDoctrine\ORM\Pagination\PaginatesFromRequest;

class VulnerabilityRepository extends AbstractSearchableRepository implements Searchable
{
    use PaginatesFromRequest;

    /**
     * Get paginated Vulnerabilities found in the File with the given ID
     *
     * @param int $fileId
     *
     * @return \Illuminate\Pagination\LengthAwarePaginator
     */
    public function findByFileQuery(int $fileId = 0)
    {
        if (!isset($fileId)) {
            $fileId = 0;
        }

        return $this->paginate(
            $this->createQueryBuilder('v')
                ->addCriteria(
                    Criteria::create()->where(
                        Criteria::expr()->eq(Vulnerability::FILE_ID, $fileId)
                    )
                )
                ->orderBy('v.severity', Criteria::DESC)
                ->getQuery(),
            10,
            'page',
            false
        );
    }

    /**
     * @inheritdoc
     *
     * @return Collection
     */
    protected function getSearchableFields(): Collection
    {
        return collect([Vulnerability::NAME]);
    }
}