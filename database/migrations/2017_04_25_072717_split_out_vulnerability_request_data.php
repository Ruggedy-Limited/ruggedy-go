<?php

use App\Utils\RawMigration;

class SplitOutVulnerabilityRequestData extends RawMigration
{
    /**
     * @inheritdoc
     *
     * @return string
     */
    public function getRawSqlMigration()
    {
        return <<<SQL
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

CREATE TABLE IF NOT EXISTS `vulnerability_http_data` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `http_port` INT(6) UNSIGNED DEFAULT NULL,
  `http_method` ENUM('GET','OPTIONS','HEAD','POST','PUT','DELETE','TRACE','CONNECT') DEFAULT NULL,
  `http_banner` VARCHAR(45) DEFAULT NULL,
  `http_status_code` INT(4) UNSIGNED DEFAULT NULL,
  `http_uri` TEXT,
  `http_test_parameter` VARCHAR(45) DEFAULT NULL,
  `http_raw_request` LONGTEXT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `http_raw_response` LONGTEXT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `http_attack_pattern` TEXT,
  `http_attack_response` TEXT,
  `vulnerability_id` INT(10) UNSIGNED NOT NULL COMMENT '',
  `created_at` DATETIME NOT NULL,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `vulnerability_http_data_vulnerability_fk_idx` (`vulnerability_id`),
  CONSTRAINT `vulnerability_http_data_vulnerability_fk` FOREIGN KEY (`vulnerability_id`)
  REFERENCES `vulnerabilities` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=321 DEFAULT CHARSET=utf8mb4;

ALTER TABLE `vulnerabilities`
  DROP COLUMN `http_method`,
  DROP COLUMN `http_banner`,
  DROP COLUMN `http_status_code`,
  DROP COLUMN `http_uri`,
  DROP COLUMN `http_test_parameter`,
  DROP COLUMN `http_raw_request`,
  DROP COLUMN `http_raw_response`,
  DROP COLUMN `http_attack_pattern`,
  DROP COLUMN `http_attack_response`;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
SQL;

    }
}
